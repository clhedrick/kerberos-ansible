#%PAM-1.0
# Don't edit this file. It's distributed by ansible
# it starts out generated by authconfig --enablesss on centos 7.4
# added message for users without account, pam_reg_cc, and pam_kmkhomedir
auth        required      pam_env.so
{% if ansible_fqdn == 'jupyter.cs.rutgers.edu' %}
# need unix for jupyter because the pam interface requires a single prompt
# if we let pam_sssd prompt we'll get separate for the factors. By making unix
# prompt we get them together
auth        [success=2 default=ignore] pam_succeed_if.so service in jupyter quiet
{% endif %}
auth        [default=1 ignore=ignore success=ok] pam_succeed_if.so uid >= 1000 quiet
auth        [default=1 ignore=ignore success=ok] pam_localuser.so
auth        sufficient    pam_unix.so nullok try_first_pass
auth        requisite     pam_succeed_if.so uid >= 1000 quiet_success
auth        sufficient    pam_sss.so forward_pass
auth        required      pam_deny.so

account     required      pam_unix.so
account     sufficient    pam_localuser.so
account     sufficient    pam_succeed_if.so uid < 1000 quiet
account     [default=bad success=1 user_unknown=ignore] pam_sss.so
{% if noacctmessage is defined %}
account     optional      pam_echo.so {{ noacctmessage}}
{% else %}
account     optional      pam_echo.so ****** If you believe you are entitled to an account on this system, go to https://services.cs.rutgers.edu/accounts
{% endif %}
account     required      pam_permit.so

password    requisite     pam_pwquality.so try_first_pass local_users_only retry=3 authtok_type=
password    sufficient    pam_unix.so sha512 shadow nullok try_first_pass use_authtok
password    sufficient    pam_sss.so use_authtok


password    required      pam_deny.so

session     optional      pam_keyinit.so revoke
session     required      pam_limits.so
-session     optional      pam_systemd.so
session     [success=1 default=ignore] pam_succeed_if.so service in crond quiet use_uid
session     required      pam_unix.so
session     optional      pam_sss.so
session     optional      pam_reg_cc.so usecollection
{% if local_homedir is not defined or not local_homedir %}
session     optional      pam_kmkhomedir.so {{ 'umask=' ~ homedir_umask if homedir_umask is defined else '' }}
{% else %}
session     optional      pam_mkhomedir.so {{ 'umask=' ~ homedir_umask if homedir_umask is defined else '' }}
{% endif %}
{% if nocommonmap is not defined or not nocommonmap %}
session     optional      pam_kmkhomedir.so dir=/common/users/%u
{% endif %}
{% if setlimits is defined %}
session     optional      pam_exec.so /usr/libexec/setlimits.sh 
{% endif %}
{% if clusterdata is defined %}
session     optional      pam_exec.so /usr/libexec/clusterdatamkdir.sh
{% endif %}
